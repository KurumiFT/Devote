[{"title":"Maid","type":0,"sectionRef":"#","url":"/api/Maid","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Maid","url":"/api/Maid#types","content":" "},{"title":"Garbage​","type":1,"pageTitle":"Maid","url":"/api/Maid#Garbage","content":"&lt;/&gt; type Garbage = Instance | table | RBXScriptConnection  Type of objects that contains in Closet Table used as Garbage should implement Destroy method ... local Signal = require(Packages.Signal) local myMaid = Maid.new() local mySignal = myMaid:Add(Signal.new()) -- Signal implement Destroy method  "},{"title":"Functions​","type":1,"pageTitle":"Maid","url":"/api/Maid#functions","content":" "},{"title":"__index​","type":1,"pageTitle":"Maid","url":"/api/Maid#__index","content":"&lt;/&gt; Maid.__index(index: any) → ((...any) → (...any)) | Garbage? Return Maid's method if exist or object from Closet by given index (could be nil)  "},{"title":"__newindex​","type":1,"pageTitle":"Maid","url":"/api/Maid#__newindex","content":"&lt;/&gt; Maid.__newindex( index: any, value: Garbage? ) → () You can add items into Maid by setting value on index tip Use this for frequently used instances, for example: Signal, UI... self.myMaid = Maid.new() self.myMaid['Frame'] = Frame -- Attach Frame to Maid -- In other function if self.myMaid['Frame'] then self.myMaid['Frame'].BackgroundTransparency = 1 ... end   "},{"title":"new​","type":1,"pageTitle":"Maid","url":"/api/Maid#new","content":"&lt;/&gt; Maid.new(...: Garbage?) → Maid Return new Maid object local myMaid = Maid.new()   "},{"title":"Add​","type":1,"pageTitle":"Maid","url":"/api/Maid#Add","content":"&lt;/&gt; Maid:Add(...: Garbage) → ...Garbage Push Garbage into Maid local vfxPart = Instance.new('Part') ... myMaid:Add(vfxPart) note Don't forget that you can push multiple garbage in one call   "},{"title":"Destroy​","type":1,"pageTitle":"Maid","url":"/api/Maid#Destroy","content":"&lt;/&gt; Maid:Destroy() → () Clean Maid from Garbage local myMaid = Maid.new() myMaid['testInstance'] = Instance.new('Part') print(myMaid['testInstance']) -- Part myMaid:Destroy() print(myMaid['testInstance']) -- nil   "},{"title":"Clean​","type":1,"pageTitle":"Maid","url":"/api/Maid#Clean","content":"&lt;/&gt; Maid:Clean() → () Allias of Maid:Destroy() local myMaid = Maid.new() myMaid['testInstance'] = Instance.new('Part') print(myMaid['testInstance']) -- Part myMaid:Clean() print(myMaid['testInstance']) -- nil  "}]